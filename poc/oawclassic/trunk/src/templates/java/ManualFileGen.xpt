«IMPORT org::openarchitectureware::meta::uml::classifier»
«IMPORT oaw4::demo::classic::uml::meta»
«IMPORT org::openarchitectureware::meta::uml::state»
«IMPORT org::openarchitectureware::core::meta::core»
«IMPORT java»
«EXTENSION java::NamingConventions»

«REM»This file will be written once and is to meant for manual programming «ENDREM»
«DEFINE genManualFile(String extensionPath, String extensionName, String annotations) FOR Element»

	«FILE parentPackagePath() + extensionPath + "/" + NameS + extensionName + ".java" man_path»
		
		package «parentPackageName()  + extensionPath.replaceSlashesWithDots()»;
		
		«EXPAND GenImports FOR this»
		
		«annotations»
		public class «NameS + extensionName» extends «NameS + extensionName»Base{
			
			«getLoggerDeclaration(NameS + extensionName)»;
	
			public «NameS + extensionName» «NameS.toFirstLower() + extensionName»Instance(){
				return this;
			}
		}  
	«ENDFILE» 
«ENDDEFINE»


«DEFINE genManualFileServiceTest(String extensionPath, String extensionName, String annotations) FOR Service»

	«FILE extensionPath + "/" + packagePath()+  "/" + NameS + extensionName + ".java" man_path»
		
		package «packageName()»;
		
		«EXPAND GenImports FOR this»
		
		«annotations»
		public class «NameS + extensionName» extends «NameS + extensionName»Base{
			
			«getLoggerDeclaration(NameS + extensionName)»;
	
		}  
	«ENDFILE» 
«ENDDEFINE»




«DEFINE GenImports FOR Element»
	import javax.persistence.*;
	import org.springframework.transaction.annotation.Propagation;
	import org.springframework.transaction.annotation.Transactional;

	import org.apache.log4j.Logger;
«ENDDEFINE»


«REM»This file will be written once and is to meant for manual programming «ENDREM»
«DEFINE genManualFile(String packagePath, String extensionName, String annotations) FOR State»

	«FILE packagePath + "/" + NameS.toFirstUpper() + extensionName + ".java" man_path»
		package «packagePath.replaceSlashesWithDots()»;

		import org.apache.log4j.Logger;
		
		public class «NameS.toFirstUpper() + extensionName» extends «NameS.toFirstUpper() + extensionName»Base{
			
			private static final Logger log = Logger.getLogger
				(«NameS.toFirstUpper() + extensionName».class);
	
		}  
	«ENDFILE» 
«ENDDEFINE»