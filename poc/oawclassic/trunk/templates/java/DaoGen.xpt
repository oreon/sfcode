«IMPORT org::openarchitectureware::meta::uml::classifier»
«IMPORT oaw4::demo::classic::uml::meta»
«IMPORT org::openarchitectureware::core::meta::core»
«IMPORT java»
«EXTENSION java::NamingConventions»


«DEFINE GenerateDao FOR Entity»
	
	«FILE packagePath()+"/dao/"+NameS+"Dao.java"»  

	package «packageName()».dao;
	
	import «packageName()». «asParameter()»;
	import javax.persistence.*;
	
	public class «asParameter()»Dao{
	
			public «asParameter()» save(«asParameter()» «asInstanceVar()») {
				return null;
			}
			
			public boolean delete(«asParameter()» «asInstanceVar()») {
				return false;
			}			
			
			public «asParameter()» load(Long id) {
				return null;
			}
			
			«EXPAND GenerateFinder FOREACH Findable» 
			
		} 
	«ENDFILE»	
	
«ENDDEFINE»

«DEFINE GenerateFinder FOR Findable»
	public void findBy«NameS»() { }
«ENDDEFINE»

«DEFINE GenerateConfig FOR Model»
	«FILE "../resources/hibernate.cfg.xml"»
		<!DOCTYPE hibernate-configuration PUBLIC "-//Hibernate/Hibernate Configuration DTD 3.0//EN"
    "http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd">

<hibernate-configuration>
    <session-factory>
       	«EXPAND GenerateEntityMapping FOREACH getEntities()»
    </session-factory>
</hibernate-configuration>
	
	«ENDFILE»
«ENDDEFINE»

«DEFINE GenerateEntityMapping FOR Entity»
	<mapping class="«fqn()»" />
«ENDDEFINE»



«DEFINE GenerateDaoTest FOR Entity»
	
	«FILE "../../test/java/" + packagePath() + "/dao/" + NameS + "DaoTest.java"»  

	package «packageName()».dao;
	
	import «packageName()». «asParameter()»;
	import javax.persistence.*;
	
	public class «asParameter()»DaoTest{
	
			public void testSave() {
				//test saving a new record and updating an existing record;
			}
			
			public void testDelete() {
				//return false;
			}			
			
			public void testLoad() {
				//return null;
			}
			
			«EXPAND GenerateFinderTest FOREACH Findable» 
			
		} 
	«ENDFILE»
	
	
«ENDDEFINE»

«DEFINE GenerateFinderTest FOR Findable»
	public void testFindBy«NameS»() { }
«ENDDEFINE»




