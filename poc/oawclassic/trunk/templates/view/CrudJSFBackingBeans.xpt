«IMPORT org::openarchitectureware::meta::uml::classifier»
«IMPORT oaw4::demo::classic::uml::meta»
«IMPORT org::openarchitectureware::core::meta::core»
«IMPORT java»
«EXTENSION java::NamingConventions»


«DEFINE GenerateBackingBean FOR Entity»
	
	«FILE packagePath()+"/web/jsf/"+NameS+"BackingBean.java"»  

	package «packageName()».web.jsf;
	
	import «packageName()». «asParameter()»;
	import java.util.ArrayList;
	import java.util.List;
	import «packageName()».service.«NameS»Service;
	
	import javax.faces.component.UIParameter;
	import javax.faces.event.ActionEvent;
	
	
	public class «asParameter()»BackingBean{
	
			private «asParameter()» «asInstanceVar()» = new «asParameter()»();
			
			private	«asParameter()»Service «asInstanceVar()»Service;
			
			public void set«NameS»Service(«asParameter()»Service «asInstanceVar()»Service){
				this.«asInstanceVar()»Service = «asInstanceVar()»Service;
			}
	
			public «asParameter()» get«asParameter()»() {
				return «asInstanceVar()»;
			}
			
			public void set(«asParameter()» «asInstanceVar()») {
				this.«asInstanceVar()» = «asInstanceVar()»;
			}			
			
			
			/**Write values to the database 
            * @return - "success" if everthing goes fine
            */
			public String update() {
				«asInstanceVar()»Service.save(«asInstanceVar()»);
				return "success";
			}
			
			/** Returns a success string upon selection of an entity in model - majority of work is done
			 * in the actionListener selectEntity
            * @return - "success" if everthing goes fine
            * @see - 
            */
			 public String select(){
    			return "edit";
    		}
    
    
	    /** This action Listener Method is called when a row is clicked in the dataTable
	     *  
	     * @param event contians the database id of the row being selected 
	     */
	    public void selectEntity(ActionEvent event){
	    	
	    	UIParameter component = (UIParameter) event.getComponent().findComponent("editId");
			
	    	// parse the value of the UIParameter component    	 
	    	long id = Long.parseLong(component.getValue().toString());
	    	
	    	«asInstanceVar()» = «asInstanceVar()»Service.load(id);
	    }
			
			/**Get a list of all «asInstanceVar()»s 
            * @return - a list of «asInstanceVar()»s 
            */
   			public List<«asParameter()»> get«asParameter()»s(){
    			List<«asParameter()»> «asInstanceVar()»s = «asInstanceVar()»Service.loadAll();
    			return «asInstanceVar()»s;
    		}
	
		} 
	«ENDFILE»
	
«ENDDEFINE»


«DEFINE GenerateManagedBeanDefs FOR Model »
	
«FILE "../webapp/WEB-INF/genCrud-config.xml" » 		
<?xml version="1.0"?>
<!DOCTYPE faces-config PUBLIC
  "-//Sun Microsystems, Inc.//DTD JavaServer Faces Config 1.0//EN"
  "http://java.sun.com/dtd/web-facesconfig_1_1.dtd" >

<faces-config>

	<!--  Spring variable resolver -->
	<application>
		<variable-resolver>
			org.springframework.web.jsf.DelegatingVariableResolver
		</variable-resolver>
	</application>

	<!-- Managed beans for the crud operations -->
	«EXPAND GenerateManagedBeanDef FOREACH getEntities()»
	
	<!-- Navigation Rules  -->
	«EXPAND GenerateNavRules FOREACH getEntities()»
			
</faces-config>
	
«ENDFILE»
	
«ENDDEFINE»


«DEFINE GenerateManagedBeanDef FOR Entity»

	<managed-bean>
		<managed-bean-name>«asInstanceVar()»CrudBacking</managed-bean-name>
		<managed-bean-class>«Package.NameS».web.jsf.«NameS»BackingBean</managed-bean-class>
		<managed-property>
			<property-name>«asInstanceVar()»Service</property-name>
			<value>#{«asInstanceVar()»Service}</value>
		</managed-property>
		<managed-bean-scope>request</managed-bean-scope>
	</managed-bean> 
 	
«ENDDEFINE»
	
	
«DEFINE GenerateNavRules FOR Entity»
	<navigation-rule>
  		<from-view-id>/crud/«asInstanceVar()».xhtml</from-view-id>
  
		  <navigation-case>
		    <from-outcome>success</from-outcome>
		    <to-view-id>/crud/«asInstanceVar()»List.xhtml</to-view-id>
		  </navigation-case>   
    
	</navigation-rule>
	
	<navigation-rule>
  		<from-view-id>/crud/«asInstanceVar()»List.xhtml</from-view-id>
  
		  <navigation-case>
		    <from-outcome>edit</from-outcome>
		    <to-view-id>/crud/«asInstanceVar()».xhtml</to-view-id>
		  </navigation-case>   
    
	</navigation-rule>
	
«ENDDEFINE»		 



